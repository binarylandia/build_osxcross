#!/usr/bin/env bash

source scl_source enable devtoolset-11

set -euxo pipefail

: "${MACOS_SDK_URL:? "$0: \$MACOS_SDK_URL is not set"}"
: "${MACOS_SDK_PATH:? "$0: \$MACOS_SDK_PATH is not set"}"

export BUILD_DIR=".build"
export OUT_DIR=".out"

export CFLAGS="-w -g0 -Os ${CFLAGS:-}"
export CXXFLAGS="-w -g0 -Os ${CXXFLAGS:-}"
export LDFLAGS="-s ${LDFLAGS:-}"

export CFLAGS="-static-libgcc -static-libstdc++ ${CFLAGS:-}"
export CXXFLAGS="-static-libgcc -static-libstdc++ ${CXXFLAGS:-}"
export LDFLAGS="-static-libgcc -static-libstdc++ ${LDFLAGS:-}"

export AR="${AR:-/usr/bin/gcc-ar}"
export NM="${NM:-/usr/bin/gcc-nm}"
export RANLIB="${RANLIB:-/usr/bin/gcc-ranlib}"

export NICE="nice -19 ionice -c2 -n5"
export JOBS="${JOBS:=$(($(nproc --all) + 2))}"

export build_time="$(date -u '+%Y-%m-%d_%H-%M-%S')"

function abspath() {
  readlink -m "$1"
}
export -f abspath

function log() {
  tee -a "${1}" |
    GREP_COLOR='01;31' stdbuf -oL grep --color=always -iE "err|error|fail|can not|cannot|can't|unable|exception|critical|fatal|reject|deny|denied|terminat|abort|panic|fault|" |
    GREP_COLOR='01;33' stdbuf -oL grep --color=always -iE "warn|warning|caution|alert|notice|" |
    GREP_COLOR='01;36' stdbuf -oL grep --color=always -iE "note|info|status|detail|"
}
export -f log

function package() {
  local input_dir="${1}"
  local output_tarball="${2}"

  ${NICE} find "${input_dir}" -printf "%P\n" |
    ${NICE} tar --no-recursion -cf - -C "${input_dir}" --files-from=- |
    ${NICE} xz -T0 -k >"${output_tarball}"
}
export -f package

export THIS_DIR="$(abspath "$(
  cd "$(dirname "${BASH_SOURCE[0]}")"
  pwd
)")"

export ROOT_DIR="$(abspath "${THIS_DIR}/..")"

export MACOS_SDK_PATH="$(abspath "${MACOS_SDK_PATH}")"
if [ ! -f "${MACOS_SDK_PATH}" ]; then
  mkdir -p "$(dirname "${MACOS_SDK_PATH}")"
  curl -fsSL -o "${MACOS_SDK_PATH}" "${MACOS_SDK_URL}"
fi

flavors=(
  "full"
  "minimal"
)

function build_and_package() {
  set -euxo pipefail

  local flavor="${1}"

  case "${flavor}" in
  full)
    local GIT_REPO_URL="https://github.com/binarylandia/osxcross"
    local COMMIT_HASH="b49804a40a76f54064d062004365b0361db12372"
    ;;
  minimal)
    local GIT_REPO_URL="https://github.com/binarylandia/osxcross"
    local COMMIT_HASH="29fe6dd35522073c9df5800f8cd1feb4b9a993a8"
    ;;
  esac

  local commit_short="${COMMIT_HASH:0:7}"

  local build_dir="$(abspath ${BUILD_DIR})/${flavor}-${commit_short}"
  local outdir="$(abspath "${OUT_DIR}")"
  local install_dir="/opt/osxcross/${flavor}-${commit_short}"
  local src_dir="osxcross-${flavor}-${commit_short}"
  mkdir -p "${outdir}" "${build_dir}"

  pushd "${build_dir}" >/dev/null
  {
    if [ ! -d "${src_dir}" ]; then
      git clone --recursive --depth=1 "${GIT_REPO_URL}" "${src_dir}"
    fi

    if [ ! -f "${src_dir}/tarballs/$(basename "${MACOS_SDK_PATH}")" ]; then
      cp "${MACOS_SDK_PATH}" "${src_dir}/tarballs/"
    fi

    pushd "${src_dir}" >/dev/null
    {
      git config advice.detachedHead false
      git checkout "${COMMIT_HASH}"

      declare -x OSX_VERSION_MIN="10.12"
      declare -x MACOSX_DEPLOYMENT_TARGET="${OSX_VERSION_MIN}"
      declare -x LIBZ_SYS_STATIC="1"
      declare -x OSXCROSS_MP_INC="1"
      declare -x GCC_VERSION="14.2.0"
      declare -x ENABLE_FORTRAN="1"
      declare -x ENABLE_COMPILER_RT_INSTALL="1"
      declare -x PORTABLE=1
      declare -x OCDEBUG=0
      declare -x UNATTENDED=1
      declare -x TARGET_DIR="${install_dir}"
      declare -x INSTALLPREFIX="${install_dir}"

      export PATH="${install_dir}/bin${PATH:+":$PATH"}"

      ${NICE} ./build.sh 2>&1 | log "build.log"

      if [ "${flavor}" == "full" ]; then
        MY_TARGET_ARCH="x86_64" ${NICE} ./build_gcc.sh 2>&1 | log "build.log"
        MY_TARGET_ARCH="aarch64" ${NICE} ./build_gcc.sh 2>&1 | log "build.log"
      fi

      pushd "${install_dir}/bin" >/dev/null
      {
        ln -fs "dsymutil" "aarch64-apple-darwin20.2-dsymutil"
        ln -fs "dsymutil" "arm64-apple-darwin20.2-dsymutil"
        ln -fs "dsymutil" "arm64e-apple-darwin20.2-dsymutil"
        ln -fs "dsymutil" "x86_64-apple-darwin20.2-dsymutil"
        ln -fs "dsymutil" "x86_64h-apple-darwin20.2-dsymutil"
      }
      popd >/dev/null
    }
    popd >/dev/null
  }
  popd >/dev/null

  package "${install_dir}" "${outdir}/osxcross-${flavor}-${commit_short}-${build_time}.tar.xz"
}
export -f build_and_package
parallel -j5 -u build_and_package ::: "${flavors[@]}"
